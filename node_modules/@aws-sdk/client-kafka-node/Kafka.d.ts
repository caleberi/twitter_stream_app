import { KafkaClient } from "./KafkaClient";
import { CreateClusterInput } from "./types/CreateClusterInput";
import { CreateClusterOutput } from "./types/CreateClusterOutput";
import { CreateConfigurationInput } from "./types/CreateConfigurationInput";
import { CreateConfigurationOutput } from "./types/CreateConfigurationOutput";
import { DeleteClusterInput } from "./types/DeleteClusterInput";
import { DeleteClusterOutput } from "./types/DeleteClusterOutput";
import { DescribeClusterInput } from "./types/DescribeClusterInput";
import { DescribeClusterOperationInput } from "./types/DescribeClusterOperationInput";
import { DescribeClusterOperationOutput } from "./types/DescribeClusterOperationOutput";
import { DescribeClusterOutput } from "./types/DescribeClusterOutput";
import { DescribeConfigurationInput } from "./types/DescribeConfigurationInput";
import { DescribeConfigurationOutput } from "./types/DescribeConfigurationOutput";
import { DescribeConfigurationRevisionInput } from "./types/DescribeConfigurationRevisionInput";
import { DescribeConfigurationRevisionOutput } from "./types/DescribeConfigurationRevisionOutput";
import { GetBootstrapBrokersInput } from "./types/GetBootstrapBrokersInput";
import { GetBootstrapBrokersOutput } from "./types/GetBootstrapBrokersOutput";
import { ListClusterOperationsInput } from "./types/ListClusterOperationsInput";
import { ListClusterOperationsOutput } from "./types/ListClusterOperationsOutput";
import { ListClustersInput } from "./types/ListClustersInput";
import { ListClustersOutput } from "./types/ListClustersOutput";
import { ListConfigurationRevisionsInput } from "./types/ListConfigurationRevisionsInput";
import { ListConfigurationRevisionsOutput } from "./types/ListConfigurationRevisionsOutput";
import { ListConfigurationsInput } from "./types/ListConfigurationsInput";
import { ListConfigurationsOutput } from "./types/ListConfigurationsOutput";
import { ListNodesInput } from "./types/ListNodesInput";
import { ListNodesOutput } from "./types/ListNodesOutput";
import { ListTagsForResourceInput } from "./types/ListTagsForResourceInput";
import { ListTagsForResourceOutput } from "./types/ListTagsForResourceOutput";
import { TagResourceInput } from "./types/TagResourceInput";
import { TagResourceOutput } from "./types/TagResourceOutput";
import { UntagResourceInput } from "./types/UntagResourceInput";
import { UntagResourceOutput } from "./types/UntagResourceOutput";
import { UpdateBrokerStorageInput } from "./types/UpdateBrokerStorageInput";
import { UpdateBrokerStorageOutput } from "./types/UpdateBrokerStorageOutput";
import { UpdateClusterConfigurationInput } from "./types/UpdateClusterConfigurationInput";
import { UpdateClusterConfigurationOutput } from "./types/UpdateClusterConfigurationOutput";
export declare class Kafka extends KafkaClient {
    /**
     *
                <p>Creates a new MSK cluster.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {ServiceUnavailableException}
                <p>Returns information about an error.</p>
  
     *   - {TooManyRequestsException}
                <p>Returns information about an error.</p>
  
     *   - {ConflictException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    createCluster(args: CreateClusterInput): Promise<CreateClusterOutput>;
    createCluster(args: CreateClusterInput, cb: (err: any, data?: CreateClusterOutput) => void): void;
    /**
     *
                <p>Creates a new MSK configuration.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {ServiceUnavailableException}
                <p>Returns information about an error.</p>
  
     *   - {TooManyRequestsException}
                <p>Returns information about an error.</p>
  
     *   - {ConflictException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    createConfiguration(args: CreateConfigurationInput): Promise<CreateConfigurationOutput>;
    createConfiguration(args: CreateConfigurationInput, cb: (err: any, data?: CreateConfigurationOutput) => void): void;
    /**
     *
                <p>Deletes the MSK cluster specified by the Amazon Resource Name (ARN) in the request.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    deleteCluster(args: DeleteClusterInput): Promise<DeleteClusterOutput>;
    deleteCluster(args: DeleteClusterInput, cb: (err: any, data?: DeleteClusterOutput) => void): void;
    /**
     *
                <p>Returns a description of the MSK cluster whose Amazon Resource Name (ARN) is specified in the request.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    describeCluster(args: DescribeClusterInput): Promise<DescribeClusterOutput>;
    describeCluster(args: DescribeClusterInput, cb: (err: any, data?: DescribeClusterOutput) => void): void;
    /**
     *
                <p>Returns a description of the cluster operation specified by the ARN.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    describeClusterOperation(args: DescribeClusterOperationInput): Promise<DescribeClusterOperationOutput>;
    describeClusterOperation(args: DescribeClusterOperationInput, cb: (err: any, data?: DescribeClusterOperationOutput) => void): void;
    /**
     *
                <p>Returns a description of this MSK configuration.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {ServiceUnavailableException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    describeConfiguration(args: DescribeConfigurationInput): Promise<DescribeConfigurationOutput>;
    describeConfiguration(args: DescribeConfigurationInput, cb: (err: any, data?: DescribeConfigurationOutput) => void): void;
    /**
     *
                <p>Returns a description of this revision of the configuration.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {ServiceUnavailableException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    describeConfigurationRevision(args: DescribeConfigurationRevisionInput): Promise<DescribeConfigurationRevisionOutput>;
    describeConfigurationRevision(args: DescribeConfigurationRevisionInput, cb: (err: any, data?: DescribeConfigurationRevisionOutput) => void): void;
    /**
     *
                <p>A list of brokers that a client application can use to bootstrap.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ConflictException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    getBootstrapBrokers(args: GetBootstrapBrokersInput): Promise<GetBootstrapBrokersOutput>;
    getBootstrapBrokers(args: GetBootstrapBrokersInput, cb: (err: any, data?: GetBootstrapBrokersOutput) => void): void;
    /**
     *
                <p>Returns a list of all the operations that have been performed on the specified MSK cluster.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    listClusterOperations(args: ListClusterOperationsInput): Promise<ListClusterOperationsOutput>;
    listClusterOperations(args: ListClusterOperationsInput, cb: (err: any, data?: ListClusterOperationsOutput) => void): void;
    /**
     *
                <p>Returns a list of all the MSK clusters in the current Region.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    listClusters(args: ListClustersInput): Promise<ListClustersOutput>;
    listClusters(args: ListClustersInput, cb: (err: any, data?: ListClustersOutput) => void): void;
    /**
     *
                <p>Returns a list of all the MSK configurations in this Region.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {ServiceUnavailableException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    listConfigurationRevisions(args: ListConfigurationRevisionsInput): Promise<ListConfigurationRevisionsOutput>;
    listConfigurationRevisions(args: ListConfigurationRevisionsInput, cb: (err: any, data?: ListConfigurationRevisionsOutput) => void): void;
    /**
     *
                <p>Returns a list of all the MSK configurations in this Region.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {ServiceUnavailableException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    listConfigurations(args: ListConfigurationsInput): Promise<ListConfigurationsOutput>;
    listConfigurations(args: ListConfigurationsInput, cb: (err: any, data?: ListConfigurationsOutput) => void): void;
    /**
     *
                <p>Returns a list of the broker nodes in the cluster.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    listNodes(args: ListNodesInput): Promise<ListNodesOutput>;
    listNodes(args: ListNodesInput, cb: (err: any, data?: ListNodesOutput) => void): void;
    /**
     *
                <p>Returns a list of the tags associated with the specified resource.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    listTagsForResource(args: ListTagsForResourceInput): Promise<ListTagsForResourceOutput>;
    listTagsForResource(args: ListTagsForResourceInput, cb: (err: any, data?: ListTagsForResourceOutput) => void): void;
    /**
     *
                <p>Adds tags to the specified MSK resource.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    tagResource(args: TagResourceInput): Promise<TagResourceOutput>;
    tagResource(args: TagResourceInput, cb: (err: any, data?: TagResourceOutput) => void): void;
    /**
     *
                <p>Removes the tags associated with the keys that are provided in the query.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    untagResource(args: UntagResourceInput): Promise<UntagResourceOutput>;
    untagResource(args: UntagResourceInput, cb: (err: any, data?: UntagResourceOutput) => void): void;
    /**
     *
                <p>Updates the EBS storage associated with MSK brokers.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {ServiceUnavailableException}
                <p>Returns information about an error.</p>
  
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    updateBrokerStorage(args: UpdateBrokerStorageInput): Promise<UpdateBrokerStorageOutput>;
    updateBrokerStorage(args: UpdateBrokerStorageInput, cb: (err: any, data?: UpdateBrokerStorageOutput) => void): void;
    /**
     *
                <p>Updates the cluster with the configuration that is specified in the request body.</p>
  
     *
     * This operation may fail with one of the following errors:
     *   - {BadRequestException}
                <p>Returns information about an error.</p>
  
     *   - {UnauthorizedException}
                <p>Returns information about an error.</p>
  
     *   - {InternalServerErrorException}
                <p>Returns information about an error.</p>
  
     *   - {ForbiddenException}
                <p>Returns information about an error.</p>
  
     *   - {NotFoundException}
                <p>Returns information about an error.</p>
  
     *   - {ServiceUnavailableException}
                <p>Returns information about an error.</p>
  
     *   - {Error} An error originating from the SDK or customizations rather than the service
     */
    updateClusterConfiguration(args: UpdateClusterConfigurationInput): Promise<UpdateClusterConfigurationOutput>;
    updateClusterConfiguration(args: UpdateClusterConfigurationInput, cb: (err: any, data?: UpdateClusterConfigurationOutput) => void): void;
}
