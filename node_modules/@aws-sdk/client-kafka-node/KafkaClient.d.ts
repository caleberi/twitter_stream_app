/// <reference types="node" />
import * as __aws_sdk_middleware_stack from "@aws-sdk/middleware-stack";
import * as __aws_sdk_types from "@aws-sdk/types";
import * as _stream from "stream";
import { KafkaConfiguration, KafkaResolvedConfiguration } from "./KafkaConfiguration";
import { InputTypesUnion } from "./types/InputTypesUnion";
import { OutputTypesUnion } from "./types/OutputTypesUnion";
export declare class KafkaClient implements __aws_sdk_types.AWSClient<InputTypesUnion, OutputTypesUnion, _stream.Readable> {
    readonly config: KafkaResolvedConfiguration;
    readonly middlewareStack: __aws_sdk_middleware_stack.MiddlewareStack<InputTypesUnion, OutputTypesUnion, _stream.Readable>;
    constructor(configuration: KafkaConfiguration);
    destroy(): void;
    /**
     * This will need to be revised when the command interface lands.
     */
    send<InputType extends InputTypesUnion, OutputType extends OutputTypesUnion>(command: __aws_sdk_types.Command<InputTypesUnion, InputType, OutputTypesUnion, OutputType, KafkaResolvedConfiguration, _stream.Readable>): Promise<OutputType>;
    send<InputType extends InputTypesUnion, OutputType extends OutputTypesUnion>(command: __aws_sdk_types.Command<InputTypesUnion, InputType, OutputTypesUnion, OutputType, KafkaResolvedConfiguration, _stream.Readable>, cb: (err: any, data?: OutputType) => void): void;
}
